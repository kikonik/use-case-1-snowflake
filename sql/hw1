CREATE DATABASE RHINO_ECOMERSE_DB;

CREATE SCHEMA RHINO_ECOMERSE_DB.STAGE_EXTERNAL;

CREATE OR REPLACE TABLE RHINO_ECOMERSE_DB.STAGE_EXTERNAL.raw_orders 
(

    order_id STRING,
    customer_id STRING,
    customer_name STRING,
    order_date STRING,
    product STRING,
    quantity INT,
    price FLOAT,
    discount FLOAT,
    total_amount FLOAT,
    payment_method STRING,
    shipping_address STRING,
    status STRING

);

CREATE OR REPLACE TABLE td_for_review AS
SELECT * FROM RHINO_ECOMERSE_DB.STAGE_EXTERNAL.raw_orders
WHERE shipping_address IS NULL AND status = 'Delivered';

CREATE OR REPLACE TABLE td_suspisios_records AS
SELECT * FROM RHINO_ECOMERSE_DB.STAGE_EXTERNAL.raw_orders
WHERE customer_id IS NULL AND customer_name IS NULL;

UPDATE raw_orders 
SET payment_method = 'Unknown'
WHERE payment_method IS NULL;

CREATE OR REPLACE TABLE td_invalid_quantity_and_price AS
SELECT * FROM raw_orders
WHERE quantity <= 0 OR price <= 0;

DELETE FROM raw_orders WHERE quantity <= 0 OR price <= 0;



UPDATE raw_orders
SET discount = 0
WHERE discount < 0;

UPDATE raw_orders
SET discount = 0.5
WHERE discount > 0.5; 


UPDATE raw_orders
SET total_amount = quantity * price * (1 - discount)
WHERE total_amount != quantity * price * (1 - discount);


UPDATE raw_orders
SET status = 'Pending'
WHERE status = 'Delivered' AND shipping_address IS NULL;



DELETE FROM raw_orders WHERE order_id IN
(

    SELECT order_id
    FROM 
    (

        SELECT order_id,
            ROW_NUMBER() OVER (PARTITION BY order_id ORDER BY order_id) AS rn
        FROM raw_orders
    
    )

    WHERE rn > 1 

);

CREATE OR REPLACE TABLE td_clean_records AS 
SELECT * FROM raw_orders;
